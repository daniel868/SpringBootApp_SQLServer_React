{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danit\\\\Documents\\\\JavaDev\\\\Airport\\\\src\\\\react_interface\\\\airport_user_interface\\\\src\\\\components\\\\reusableComponents\\\\utils\\\\ChooseCompanies.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\n\nexport default function ChooseCompanies(props) {\n  _s();\n\n  const theme = useTheme();\n  const [value, setValue] = React.useState([]);\n\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setValue( // On autofill we get a the stringified value.\n    typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const btnFunction = event => {\n    //sent the data back to the main component\n    event.preventDefault();\n    props.parentCallBack(value);\n    console.log(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: props.isVisible ? /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-name-label\",\n        children: \"Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-name-label\",\n        id: \"demo-multiple-name\",\n        multiple: true,\n        value: value,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          label: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 28\n        }, this),\n        MenuProps: MenuProps,\n        children: props.dataApi.map(row => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: row.companyName,\n          style: getStyles(row.companyName, value, theme),\n          children: row.companyName\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          marginTop: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: btnFunction,\n          children: \"Add flight/s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChooseCompanies, \"SVvISWvkVzlN50v504vxpcy+a/I=\", false, function () {\n  return [useTheme];\n});\n\n_c = ChooseCompanies;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChooseCompanies\");","map":{"version":3,"sources":["C:/Users/danit/Documents/JavaDev/Airport/src/react_interface/airport_user_interface/src/components/reusableComponents/utils/ChooseCompanies.jsx"],"names":["React","useTheme","OutlinedInput","InputLabel","MenuItem","FormControl","Select","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","getStyles","name","personName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","ChooseCompanies","props","value","setValue","useState","handleChange","event","target","split","btnFunction","preventDefault","parentCallBack","console","log","isVisible","m","dataApi","map","row","companyName","id","marginTop"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,gBAAgB,GAAG,CAAzB;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE;AACHC,MAAAA,SAAS,EAAEL,WAAW,GAAG,GAAd,GAAoBC,gBAD5B;AAEHK,MAAAA,KAAK,EAAE;AAFJ;AADC;AADE,CAAlB;;AASA,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,UAAzB,EAAqCC,KAArC,EAA4C;AACxC,SAAO;AACHC,IAAAA,UAAU,EACNF,UAAU,CAACG,OAAX,CAAmBJ,IAAnB,MAA6B,CAAC,CAA9B,GACME,KAAK,CAACG,UAAN,CAAiBC,iBADvB,GAEMJ,KAAK,CAACG,UAAN,CAAiBE;AAJxB,GAAP;AAMH;;AAGD,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE3C,QAAMP,KAAK,GAAGhB,QAAQ,EAAtB;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoB1B,KAAK,CAAC2B,QAAN,CAAe,EAAf,CAA1B;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAM;AACFC,MAAAA,MAAM,EAAE;AAACL,QAAAA;AAAD;AADN,QAEFI,KAFJ;AAGAH,IAAAA,QAAQ,EACJ;AACA,WAAOD,KAAP,KAAiB,QAAjB,GAA4BA,KAAK,CAACM,KAAN,CAAY,GAAZ,CAA5B,GAA+CN,KAF3C,CAAR;AAIH,GARD;;AAUA,QAAMO,WAAW,GAAIH,KAAD,IAAW;AAC3B;AACAA,IAAAA,KAAK,CAACI,cAAN;AACAT,IAAAA,KAAK,CAACU,cAAN,CAAqBT,KAArB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH,GALD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cACKD,KAAK,CAACa,SAAN,gBAAkB,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAACC,QAAAA,CAAC,EAAE,CAAJ;AAAOzB,QAAAA,KAAK,EAAE;AAAd,OAAjB;AAAA,8BACf,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADe,eAEf,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,0BADZ;AAEI,QAAA,EAAE,EAAC,oBAFP;AAGI,QAAA,QAAQ,MAHZ;AAII,QAAA,KAAK,EAAEY,KAJX;AAKI,QAAA,QAAQ,EAAEG,YALd;AAMI,QAAA,KAAK,eAAE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,gBANX;AAOI,QAAA,SAAS,EAAEnB,SAPf;AAAA,kBASKe,KAAK,CAACe,OAAN,CAAcC,GAAd,CAAmBC,GAAD,iBACf,QAAC,QAAD;AAEI,UAAA,KAAK,EAAEA,GAAG,CAACC,WAFf;AAGI,UAAA,KAAK,EAAE5B,SAAS,CAAC2B,GAAG,CAACC,WAAL,EAAkBjB,KAAlB,EAAyBR,KAAzB,CAHpB;AAAA,oBAMKwB,GAAG,CAACC;AANT,WACSD,GAAG,CAACE,EADb;AAAA;AAAA;AAAA;AAAA,gBADH;AATL;AAAA;AAAA;AAAA;AAAA,cAFe,eAuBf;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAnC;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAEZ,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvBe;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB,GA2BgB;AA5BrB;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GArDuBT,e;UAENtB,Q;;;KAFMsB,e","sourcesContent":["import * as React from 'react';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n        fontWeight:\r\n            personName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\n\r\nexport default function ChooseCompanies(props) {\r\n\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState([])\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setValue(\r\n            // On autofill we get a the stringified value.\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const btnFunction = (event) => {\r\n        //sent the data back to the main component\r\n        event.preventDefault()\r\n        props.parentCallBack(value)\r\n        console.log(value)\r\n    }\r\n    return (\r\n        <div className=\"form-group\">\r\n            {props.isVisible ? <FormControl sx={{m: 1, width: 300}}>\r\n                <InputLabel id=\"demo-multiple-name-label\">Options</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-name-label\"\r\n                    id=\"demo-multiple-name\"\r\n                    multiple\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    input={<OutlinedInput label=\"Name\"/>}\r\n                    MenuProps={MenuProps}>\r\n\r\n                    {props.dataApi.map((row) => (\r\n                        <MenuItem\r\n                            key={row.id}\r\n                            value={row.companyName}\r\n                            style={getStyles(row.companyName, value, theme)}\r\n\r\n                        >\r\n                            {row.companyName}\r\n                        </MenuItem>\r\n                    ))}\r\n\r\n                </Select>\r\n                <div className=\"form-group\" style={{marginTop: \"10px\"}}>\r\n                    <button className=\"btn btn-primary\" onClick={btnFunction}>Add flight/s</button>\r\n                </div>\r\n\r\n            </FormControl> : null}\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}